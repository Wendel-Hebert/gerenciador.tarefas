<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <link rel="stylesheet" href="/css/style.css">
</head>
<body>
  <%- include('../partials/header') %>
  
  <main class="container">
    <h1>Gerenciamento de Categorias</h1>
    
    <div class="form-container">
      <h2>Nova Categoria</h2>
      <form id="categoryForm">
        <input type="hidden" id="categoryId">
        
        <div class="form-group">
          <label for="name">Nome</label>
          <input type="text" id="name" name="name" required>
        </div>
        
        <div class="form-group">
          <label for="userId">ID do Usuário</label>
          <input type="number" id="userId" name="userId" required>
        </div>
        
        <div class="form-actions">
          <button type="submit" class="btn btn-primary">Salvar</button>
          <button type="button" id="cancelBtn" class="btn">Cancelar</button>
        </div>
      </form>
    </div>
    
    <div class="table-container">
      <h2>Lista de Categorias</h2>
      <table id="categoriesTable">
        <thead>
          <tr>
            <th>ID</th>
            <th>Nome</th>
            <th>ID do Usuário</th>
            <th>Ações</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td colspan="4" class="loading">Carregando categorias...</td>
          </tr>
        </tbody>
      </table>
    </div>
  </main>
  
  <%- include('../partials/footer') %>
  
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const categoryForm = document.getElementById('categoryForm');
      const cancelBtn = document.getElementById('cancelBtn');
      const categoriesTable = document.getElementById('categoriesTable').querySelector('tbody');
      
      // Carregar categorias ao iniciar
      loadCategories();
      
      // Configurar eventos
      categoryForm.addEventListener('submit', handleSubmit);
      cancelBtn.addEventListener('click', resetForm);
      
      // Função para carregar categorias
      async function loadCategories() {
        try {
          const response = await fetch('/api/categories');
          if (!response.ok) {
            throw new Error('Erro ao buscar categorias');
          }
          
          const categories = await response.json();
          renderCategories(categories);
        } catch (error) {
          console.error('Erro:', error);
          categoriesTable.innerHTML = `<tr><td colspan="4" class="error">Erro ao carregar categorias: ${error.message}</td></tr>`;
        }
      }
      
      // Função para renderizar categorias na tabela
      function renderCategories(categories) {
        if (categories.length === 0) {
          categoriesTable.innerHTML = '<tr><td colspan="4" class="empty">Nenhuma categoria encontrada</td></tr>';
          return;
        }
        
        categoriesTable.innerHTML = '';
        categories.forEach(category => {
          const row = document.createElement('tr');
          
          row.innerHTML = `
            <td>${category.id}</td>
            <td>${category.name}</td>
            <td>${category.user_id}</td>
            <td class="actions">
              <button class="btn btn-edit" onclick="editCategory(${category.id})">Editar</button>
              <button class="btn btn-delete" onclick="deleteCategory(${category.id})">Excluir</button>
            </td>
          `;
          
          categoriesTable.appendChild(row);
        });
      }
      
      // Função para lidar com o envio do formulário
      async function handleSubmit(event) {
        event.preventDefault();
        
        const categoryId = document.getElementById('categoryId').value;
        const categoryData = {
          name: document.getElementById('name').value,
          user_id: parseInt(document.getElementById('userId').value)
        };
        
        try {
          let url = '/api/categories';
          let method = 'POST';
          
          if (categoryId) {
            url = `/api/categories/${categoryId}`;
            method = 'PUT';
          }
          
          const response = await fetch(url, {
            method,
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(categoryData)
          });
          
          if (!response.ok) {
            const errorData = await response.json();
            throw new Error(errorData.error || 'Erro ao salvar categoria');
          }
          
          resetForm();
          loadCategories();
          alert(categoryId ? 'Categoria atualizada com sucesso!' : 'Categoria criada com sucesso!');
        } catch (error) {
          console.error('Erro:', error);
          alert(`Erro: ${error.message}`);
        }
      }
      
      // Função para resetar o formulário
      function resetForm() {
        document.getElementById('categoryId').value = '';
        document.getElementById('name').value = '';
        document.getElementById('userId').value = '';
      }
      
      // Função global para editar categoria
      window.editCategory = async function(id) {
        try {
          const response = await fetch(`/api/categories/${id}`);
          if (!response.ok) {
            throw new Error('Erro ao buscar detalhes da categoria');
          }
          
          const category = await response.json();
          
          document.getElementById('categoryId').value = category.id;
          document.getElementById('name').value = category.name;
          document.getElementById('userId').value = category.user_id;
          
          // Rolar até o formulário
          document.querySelector('.form-container').scrollIntoView({ behavior: 'smooth' });
        } catch (error) {
          console.error('Erro:', error);
          alert(`Erro ao editar: ${error.message}`);
        }
      };
      
      // Função global para excluir categoria
      window.deleteCategory = async function(id) {
        if (!confirm('Tem certeza que deseja excluir esta categoria?')) {
          return;
        }
        
        try {
          const response = await fetch(`/api/categories/${id}`, {
            method: 'DELETE'
          });
          
          if (!response.ok) {
            const errorData = await response.json();
            throw new Error(errorData.error || 'Erro ao excluir categoria');
          }
          
          loadCategories();
          alert('Categoria excluída com sucesso!');
        } catch (error) {
          console.error('Erro:', error);
          alert(`Erro ao excluir: ${error.message}`);
        }
      };
    });
  </script>
</body>
</html>
